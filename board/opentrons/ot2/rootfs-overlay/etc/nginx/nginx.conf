user root root;

events {
    worker_connections 1024;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        # Values in {} get replaced by environment variable during
        # container build
        listen [::]:31950;
        listen 0.0.0.0:31950;

        client_body_in_file_only off;
        client_body_buffer_size  128k;
        client_max_body_size     2M;

        access_log /data/nginx-access.log;

        # If nginx matches multiple location paths, it uses the one with the
        # longest prefix, so order shouldn't matter but length of path does
        location / {
            proxy_http_version       1.1;
            proxy_read_timeout       1h;
            proxy_pass               http://unix:/run/aiohttp.sock;

            # Proxying these hop-by-hop headers is necessary for WebSockets.
            proxy_set_header         Upgrade $http_upgrade;
            proxy_set_header         Connection "upgrade";
        }

        location /protocols {
            proxy_http_version       1.1;
            proxy_read_timeout       1h;
            proxy_pass               http://unix:/run/aiohttp.sock;

            # Proxying these hop-by-hop headers is necessary for WebSockets.
            proxy_set_header         Upgrade $http_upgrade;
            proxy_set_header         Connection "upgrade";
            # need for uploading large protocols
            client_max_body_size     50M;
        }

        location /server {
            proxy_http_version       1.1;
            proxy_read_timeout       1h;
            proxy_set_header         X-Host-IP $server_addr;
            proxy_pass               http://127.0.0.1:34000;
            proxy_request_buffering  off;
            client_max_body_size     0;  # Unlimited to allow large update files.
        }
    }
}
